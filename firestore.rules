rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    match /users/{userId} {
      allow read, write: if request.auth.uid == userId;
    }

    match /groups/{groupId} {
      function isGroupValid() {
        return request.resource.data.name is string
            && request.resource.data.visibility in ['public', 'private']
            && request.resource.data.members is map
            && (request.resource.data.descrition == null || request.resource.data.descrition is string);
      }

      function isAdmin() {
        return resource.data.members[request.auth.uid] == 'admin';
      }

      function isEditor() {
        return resource.data.members[request.auth.uid] in ['admin', 'editor'];
      }

      function isMember() {
        return resource.data.members[request.auth.uid] != null;
      }

      function isPublic() {
        return resource.data.visibility == 'public';
      }

      match /{restOfPath=**} {
        allow read: if isPublic() || isMember();
      }

      allow create: if isGroupValid();
      allow update: if isEditor() && isGroupValid();
      allow delete: if isAdmin();

      match /members/{userId} {
        function isMemberValid() {
          return request.resource.data[userId] in ['admin', 'editor', 'viewer'];
        }

        allow create: if isAdmin() && isMemberValid();
        allow update: if isAdmin() && isMemberValid();
        allow delete: if isAdmin();
      }
    }

  }
}
